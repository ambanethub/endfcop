version: "3.9"
services:
  postgres:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_USER: syss
      POSTGRES_PASSWORD: syss
      POSTGRES_DB: syss
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U syss"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: quay.io/minio/minio:RELEASE.2025-01-10T00-00-00Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: syss
      MINIO_ROOT_PASSWORD: sysssyss
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # Jitsi (simplified dev stack)
  jitsi-web:
    image: jitsi/web:stable
    environment:
      ENABLE_AUTH: 0
      ENABLE_GUESTS: 1
      PUBLIC_URL: http://localhost:8443
    ports:
      - "8443:80"

  nginx:
    image: nginx:1.27-alpine
    ports:
      - "8080:80"
    volumes:
      - ./infra/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - auth-service
      - ops-service
      - geo-service
      - message-service
      - report-service
      - realtime-service
      - replay-service
      - av-signal-service
      - frontend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - auth-service

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/syss
      - SPRING_DATASOURCE_USERNAME=syss
      - SPRING_DATASOURCE_PASSWORD=syss
    ports:
      - "8101:8080"
    depends_on:
      - postgres

  ops-service:
    build:
      context: ./backend/ops-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/syss
      - SPRING_DATASOURCE_USERNAME=syss
      - SPRING_DATASOURCE_PASSWORD=syss
    ports:
      - "8102:8080"
    depends_on:
      - postgres

  geo-service:
    build:
      context: ./backend/geo-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/syss
      - SPRING_DATASOURCE_USERNAME=syss
      - SPRING_DATASOURCE_PASSWORD=syss
    ports:
      - "8103:8080"
    depends_on:
      - postgres

  message-service:
    build:
      context: ./backend/message-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/syss
      - SPRING_DATASOURCE_USERNAME=syss
      - SPRING_DATASOURCE_PASSWORD=syss
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=syss
      - MINIO_SECRET_KEY=sysssyss
    ports:
      - "8104:8080"
    depends_on:
      - postgres
      - minio

  report-service:
    build:
      context: ./backend/report-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/syss
      - SPRING_DATASOURCE_USERNAME=syss
      - SPRING_DATASOURCE_PASSWORD=syss
    ports:
      - "8105:8080"
    depends_on:
      - postgres

  realtime-service:
    build:
      context: ./backend/realtime-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_REDIS_HOST=redis
    ports:
      - "8106:8080"
    depends_on:
      - redis

  replay-service:
    build:
      context: ./backend/replay-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/syss
      - SPRING_DATASOURCE_USERNAME=syss
      - SPRING_DATASOURCE_PASSWORD=syss
    ports:
      - "8107:8080"
    depends_on:
      - postgres

  av-signal-service:
    build:
      context: ./backend/av-signal-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - JITSI_PUBLIC_URL=http://jitsi-web:80
    ports:
      - "8108:8080"
    depends_on:
      - jitsi-web

volumes:
  pgdata:
  minio: